> klasse TaggedSocket: bevat cgi-socket (als een SharedHandle) en een Poller::Event

1. er komt een global verzameling van TaggedSockets
2. als een request binnenkomt die om CGI vraagt, wordt de socket in die verzameling opgeslagen
3. elke socket in de global verzameling komt ook op de poller
4. de client krijgt een shared pointer naar de cgi-socket
5. elke lusiteratie worden ook de cgi-sockets gepolld; de event wordt naar de TaggedSocket gekopieerd
6. de client kan nu via z'n shared pointer controleren welke operaties hij op z'n cgi-socket kan uitvoeren
7. CGI::kill verwijdert ook de TaggedSocket uit de global verzameling
8. voor alle poller-events wordt nagegaan waar de socket thuishoort (is het een client, acceptor, graveyard of cgi); alles wat erbuiten valt wordt uit de lijst gehaald en afgesloten; als het goed is, blijven dus geen zombiesockets achter

nadelen:
> er zit nu een global in en globals zijn stom
> de daadwerkelijke socket-fd zit nu achter twee indirecties: de shared pointer naar de TaggedSocket en de shared pointer die daar weer in zit -> alles wordt weer ietsje trager

voordeel:
> we voldoen nu aan de krankzinnige eisen van 42 zonder in driekwart van de functies de event-lijst als parameter te hoeven geven

kwesties:
> het kan zijn dat de poller er niet in slaagt een event voor een socket te vinden (omdat er meer geregistreerd zijn dan opgevraagd worden) -> het moet duidelijk zijn dat, als een I/O-handeling verricht wordt, de bijbehorende event verouderd is (want het is dus niet gegarandeerd dat bij de volgende iteratie een verse event eroverheen komt)
